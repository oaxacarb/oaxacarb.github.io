<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>oaxaca.rb</title>
  <subtitle>Comunidad de Usuarios Ruby de Oaxaca</subtitle>
  <id>http://oaxacarb.org/</id>
  <link href="http://oaxacarb.org/"/>
  <link href="http://oaxacarb.org/feed.xml" rel="self"/>
  <updated>2014-04-16T16:11:00Z</updated>
  <author>
    <name>oaxaca.rb</name>
  </author>
  <entry>
    <title>Cómo subir un Post</title>
    <link rel="alternate" href="http://oaxacarb.org/2014/04/16/como-subir-un-post.html"/>
    <id>http://oaxacarb.org/2014/04/16/como-subir-un-post.html</id>
    <published>2014-04-16T16:11:00Z</published>
    <updated>2014-04-30T18:08:33-05:00</updated>
    <author>
      <name>oaxaca.rb</name>
    </author>
    <content type="html">&lt;p&gt;Subir un post a &lt;strong&gt;oaxaca.rb&lt;/strong&gt; es muy sencillo, solo debes seguir los siguientes pasos y asi aportar conocimiento a la comunidad Ruby de Oaxaca.&lt;/p&gt;

&lt;p&gt;El primer paso es crear un cuenta &lt;a href="https://github.com"&gt;Github&lt;/a&gt; si es que aún no la tienen.&lt;/p&gt;

&lt;p&gt;Si acabas de crear la cuenta de &lt;strong&gt;Github&lt;/strong&gt; debes crear tus llaves &lt;a href="https://help.github.com/articles/generating-ssh-keys"&gt;SSH&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mandar un correo con tu nombre de usuario de &lt;strong&gt;Github&lt;/strong&gt; al correo &lt;strong&gt;oaxacarb@gmail.com&lt;/strong&gt; y esperar el correo de confirmación de que te has unido al grupo. &lt;/p&gt;

&lt;h4 id="clonar-el-proyecto"&gt;Clonar el proyecto&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;En terminal&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Clona el proyecto&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone git@github.com:oaxacarb/oaxacarb.github.io.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Entras a la carpeta de tu proyecto&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd oaxacarb.github.io&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Cámbiate a la rama Source&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout source&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;La rama source es donde se subirá el código para que éste pueda ser deployado al servidor.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id="crear-el-articulo"&gt;Crear el articulo&lt;/h4&gt;

&lt;p&gt;Para crear el artículo desde terminal puedes chacer&lt;/p&gt;

&lt;p&gt;&lt;code&gt;middleman article "nombre de tu articulo"&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Este comando creara un archivo con una estampa de tiempo para que empieces a trabajar sobre el, tendra el siguiente formato. Ejemplo de este Post "2014-03-04-como-subir-un-post.html.markdown"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Dentro de tu IDE favorito puedes editar el contenido del articulo con sintaxis &lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;Markdown&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Puedes ver tus cambios reflejados antes de subirlos dentro de tu localhost en el puerto 4567 con el comando&lt;/p&gt;

&lt;p&gt;&lt;code&gt;middleman server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ya que tu artículo esta listo, debes subir tus cambios al repositorio de &lt;strong&gt;Github&lt;/strong&gt; para posteriormente subirlo al servidor.&lt;/p&gt;

&lt;p&gt;Agregar tus cambios al commit que se va subir a Github&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git add . -A&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Agregar el comentario al commit&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git commit -m "comentario"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Subir los cambios a github&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git push origin source&lt;/code&gt; &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Es importante que el push se haga hacia source porque ahi es donde se tendra el código&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Finalmente, subirlo a servidor&lt;/p&gt;

&lt;p&gt;&lt;code&gt;middleman deploy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Nota: Las veces posteriores que subas un Post debes descargar las actualizaciones que tenga el proyecto, que algun otro miembro de la comunidad haya subido un post, cambios de diseño, etc., con el siguiente comando&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git pull&lt;/code&gt; &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>4o Coding Dojo - Abril 2014</title>
    <link rel="alternate" href="http://oaxacarb.org/2014/04/09/coding-dojo-abril-2014.html"/>
    <id>http://oaxacarb.org/2014/04/09/coding-dojo-abril-2014.html</id>
    <published>2014-04-09T01:16:00Z</published>
    <updated>2014-04-10T19:22:20-05:00</updated>
    <author>
      <name>oaxaca.rb</name>
    </author>
    <content type="html">&lt;p&gt;Para comenzar las actividades del mes de abril, la comunidad &lt;strong&gt;oaxaca.rb&lt;/strong&gt; extiende la invitación a los programadores de Oaxaca (y zonas aledañas) al &lt;strong&gt;4o Coding Dojo&lt;/strong&gt;. Se realizará el &lt;strong&gt;sábado 12 de abril&lt;/strong&gt; en las instalaciones de la &lt;strong&gt;Secretaría de Desarrollo Económico&lt;/strong&gt;; la dirección es &lt;strong&gt;Matamoros #102, Centro. Oaxaca de Juárez Oaxaca&lt;/strong&gt;.&lt;/p&gt;

&lt;div class="text-center"&gt;
  &lt;p&gt;&lt;a href="https://www.eventbrite.com/e/coding-dojo-tickets-11244212743"&gt;&lt;img alt="flyer dojo" src="/images/codingdojo.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Puedes registrarte en el &lt;a href="https://www.eventbrite.com/e/coding-dojo-tickets-11244212743"&gt;evento de Eventbrite&lt;/a&gt;. Si ya has asistido anteriormente y conoces a alguien que pueda estar interesado en aprender metodologías de programación y de paso el lenguaje Ruby, invítalo con toda confianza (ya sabes, tenemos &lt;em&gt;kata&lt;/em&gt; de bienvenida).&lt;/p&gt;

&lt;p&gt;La maquina virtual que se utiliza en el Dojo está disponible en &lt;a href="https://mega.co.nz/#!gNUWDQSS!UTuITd8SrT3sMbvAInYRbWBMI0Cy4_ToYPUckX7w59M"&gt;este enlace&lt;/a&gt;. Si tienes alguna duda, puedes dejarla en la sección de comentarios (en la parte inferior). ¡Nos vemos el sábado! &lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>3er Coding Dojo - Marzo 2014</title>
    <link rel="alternate" href="http://oaxacarb.org/2014/03/27/coding-dojo-29-marzo-2014.html"/>
    <id>http://oaxacarb.org/2014/03/27/coding-dojo-29-marzo-2014.html</id>
    <published>2014-03-27T04:45:00Z</published>
    <updated>2014-03-28T16:49:25-06:00</updated>
    <author>
      <name>oaxaca.rb</name>
    </author>
    <content type="html">&lt;p&gt;La comunidad &lt;strong&gt;oaxaca.rb&lt;/strong&gt; invita a propios y extraños al &lt;strong&gt;3er Coding Dojo&lt;/strong&gt; que se llevará a cabo el sábado 29 de marzo de 2014 en las instalaciones de la empresa Pintura y Publicidad de Oaxaca, ubicadas en &lt;a href="https://www.google.com.mx/maps?q=Emiliano+Zapata+403A&amp;amp;amp;ll=17.055623,-96.716077&amp;amp;amp;spn=0.002321,0.004128&amp;amp;amp;t=m&amp;amp;amp;hnear=Emiliano+Zapata+403,+Plan+de+Ayala,+Puebla&amp;amp;amp;z=19&amp;amp;amp;layer=c&amp;amp;amp;cbll=17.055526,-96.716096&amp;amp;amp;panoid=XJ9QFI7BkMwWP046NzBHFw&amp;amp;amp;cbp=12,285.94,,0,1.52"&gt;Emiliano Zapata 412, Trinidad de las Huertas&lt;/a&gt;, Oaxaca de Juárez, Oaxaca.&lt;/p&gt;

&lt;p&gt;Si estás interesado en asistir puedes inscribirte en el &lt;a href="https://www.eventbrite.com/e/coding-dojo-tickets-11089630383"&gt;evento creado en Eventbrite&lt;/a&gt;. Asegura tu lugar, ya que tenemos cupo limitado.&lt;/p&gt;

&lt;h4 id="qu-es-un-coding-dojo"&gt;¿Qué es un Coding Dojo?&lt;/h4&gt;

&lt;p&gt;Los Coding Dojos tienen como finalidad el fomentar las buenas prácticas de programación en el desarrollo de software, por medio de la práctica y ejercicios continuos (denominados katas) los asistentes aprenden nuevas técnicas y metodologías que pueden serles útiles en su día a día profesional; es un espacio para el aprendizaje, la compartición de conocimiento y la convivencia.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Agradecimiento a Desarrollo Económico</title>
    <link rel="alternate" href="http://oaxacarb.org/2014/03/21/agradecimiento-a-desarrollo-economico.html"/>
    <id>http://oaxacarb.org/2014/03/21/agradecimiento-a-desarrollo-economico.html</id>
    <published>2014-03-21T15:52:00Z</published>
    <updated>2014-03-28T16:48:49-06:00</updated>
    <author>
      <name>oaxaca.rb</name>
    </author>
    <content type="html">&lt;p&gt;Agradecemos al Secretario de Desarrollo Económico del municipio de Oaxaca de Juárez, el Lic. Jaime Castellanos del Campo, que junto con el apoyo de la &lt;a href="https://www.facebook.com/desarrollo.economicooaxacadejuarez"&gt;Dirección de Capacitación y Empleo&lt;/a&gt; es que fue posible la realización de nuestro segundo Dojo en sus instalaciones ubicadas en la calle de Matamoros #102 Centro.&lt;/p&gt;

&lt;p&gt;Toda la comunidad de Oaxaca.rb esta muy agradecida y esperamos poder seguir contanto con su apoyo.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Coding Dojo" src="/images/dojo-2.jpg" /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Coding Dojo - Marzo 2014</title>
    <link rel="alternate" href="http://oaxacarb.org/2014/03/13/coding-dojo-marzo-2014.html"/>
    <id>http://oaxacarb.org/2014/03/13/coding-dojo-marzo-2014.html</id>
    <published>2014-03-13T04:45:00Z</published>
    <updated>2014-03-13T14:58:47-06:00</updated>
    <author>
      <name>oaxaca.rb</name>
    </author>
    <content type="html">&lt;p&gt;La comunidad &lt;strong&gt;oaxaca.rb&lt;/strong&gt; invita a propios y extraños al &lt;strong&gt;Coding Dojo&lt;/strong&gt; que se llevará a cabo el sábado 15 de marzo de 2014 en las instalaciones de la Secretaría de Desarrollo económico del municipio de Oaxaca de Juárez, ubicadas en la calle de Matamoros #102 Centro.&lt;/p&gt;

&lt;h4 id="qu-es-un-coding-dojo"&gt;¿Qué es un Coding Dojo?&lt;/h4&gt;

&lt;p&gt;Los Coding Dojos tienen como finalidad el fomentar las buenas prácticas de programación en el desarrollo de software, por medio de la práctica y ejercicios continuos (denominados katas) los asistentes aprenden nuevas técnicas y metodologías que pueden serles útiles en su día a día profesional; es un espacio para el aprendizaje, la compartición de conocimiento y la convivencia.&lt;/p&gt;

&lt;p&gt;Si estás interesado en asistir puedes inscribirte en el &lt;a href="https://www.eventbrite.com/e/coding-dojo-tickets-10919244755"&gt;evento creado en Eventbrite&lt;/a&gt;. Asegura tu lugar, ya que tenemos cupo limitado.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Configuración del entorno de trabajo Ruby con RVM</title>
    <link rel="alternate" href="http://oaxacarb.org/2014/03/11/configuracion-de-rvm-y-ruby.html"/>
    <id>http://oaxacarb.org/2014/03/11/configuracion-de-rvm-y-ruby.html</id>
    <published>2014-03-11T16:13:00Z</published>
    <updated>2014-03-28T16:48:49-06:00</updated>
    <author>
      <name>oaxaca.rb</name>
    </author>
    <content type="html">&lt;p&gt;Muchas veces, al trabajar con un lenguaje interpretado (como ruby o python) es necesario instalar varias librerías, pero siempre queda el miedo de romper algo con tanta instalación; es deseable poder tener múltiples configuraciones independientes, incluso por proyecto. Para eso tenemos &lt;a href="https://rvm.io/"&gt;RVM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;En palabras del autor, &lt;strong&gt;Ruby Version Manager&lt;/strong&gt; (RVM) se puede describir de la siguiente manera:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Una herramienta que permite fácilmente instalar, gestionar y trabajar con múltiples entornos ruby, desde versiones del intérprete hasta sets de gemas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id="instalacin-de-rvm"&gt;Instalación de RVM&lt;/h4&gt;

&lt;p&gt;Para instalar RVM en nuestro sistema &lt;strong&gt;Linux&lt;/strong&gt;, hay que seguir los siguientes pasos:&lt;/p&gt;

&lt;p&gt;Descargamos e instalamos RVM&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\curl -sSL https://get.rvm.io | bash&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Al final de la instalación, veremos un mensaje que nos pide copiar cierto contenido a nuestro archivo &lt;code&gt;.bash_profile&lt;/code&gt; (archivo oculto ubicado en nuestro directorio home), seguimos la recomendación para obtener un archivo parecido a lo siguiente:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;. $HOME/.bashrc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[[ -s "$HOME/.rvm/scripts/rvm" ]] &amp;amp;&amp;amp; source "$HOME/.rvm/scripts/rvm"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;source ~/.profile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Luego, cargamos la nueva configuración de bash en nuestra sesión actual (o reiniciamos nuestra consola, lo que gusten)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;source ~/.bash_profile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Listo, ya tenemos RVM instalado, lo podemos comprobar con el comando &lt;code&gt;rvm -v&lt;/code&gt;, lo que nos debe de mostrar la versión de RVM instalada en nuestro sistema.&lt;/p&gt;

&lt;h4 id="instalacin-de-ruby"&gt;Instalación de Ruby&lt;/h4&gt;

&lt;p&gt;Ya que tenemos instalado RVM, instalar Ruby es tan fácil como correr un comando, indicándole la versión deseada (recomendamos la &lt;em&gt;2.1.0&lt;/em&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rvm install ruby-2.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nos sentamos unos momentos a esperar a que termine la instalación…&lt;/p&gt;

&lt;h4 id="configuracin-de-rvm-por-proyecto"&gt;Configuración de RVM por proyecto&lt;/h4&gt;

&lt;p&gt;RVM es lo suficientemente "inteligente" como para identificar las versiones que requerimos dentro de un proyecto, agrupando las librerias requeridas en &lt;strong&gt;gemsets&lt;/strong&gt;, para ésto, requerimos tener un par de archivos dentro de nuestro directorio de trabajo: &lt;code&gt;.ruby-version&lt;/code&gt; y &lt;code&gt;.ruby-gemset&lt;/code&gt; (ambos archivos ocultos).&lt;/p&gt;

&lt;p&gt;Para crear y configurar un nuevo directorio de proyecto, creamos los dos archivos mencionados anteriormente denotando la versión de ruby y el nombre del gemset deseado:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mkdir proyecto &amp;amp;&amp;amp; cd proyecto&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;echo '2.1.0' &amp;gt; .ruby-version&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;echo 'proyecto' &amp;gt; .ruby-gemset&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Esto creará un gemset llamado &lt;em&gt;proyecto&lt;/em&gt; que utiliza la versión &lt;em&gt;2.1.0&lt;/em&gt; de ruby, denotado como &lt;strong&gt;ruby-2.1.0@proyecto&lt;/strong&gt;, ahora, cada que entremos al directorio &lt;code&gt;proyecto&lt;/code&gt;, RVM cargará automáticamente la configuración deseada, y todas las librerías (gemas) que instalemos en dicho proyecto quedarán aisladas en el mismo.&lt;/p&gt;

&lt;p&gt;Si aún estamos dentro de nuestra carpeta &lt;em&gt;proyecto&lt;/em&gt;, ejecutamos el comando &lt;code&gt;cd .&lt;/code&gt; (punto):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;=&amp;gt; ruby-2.1.0 - #gemset created ruby-2.1.0@proyecto&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;=&amp;gt; ruby-2.1.0 - #generating proyecto wrappers.......&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Por último, comprobamos que todo se encuentre en orden, verificamos la versión de ruby en uso con el comando:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rvm list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;=* ruby-2.1.0 [ x86_64 ]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Y el gemset cargado actualmente:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rvm gemset list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;=&amp;gt; proyecto&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Listo, ruby 2.1.0 instalado y gemset creado, estamos listos para trabajar.&lt;/p&gt;
</content>
  </entry>
</feed>
